@page "/hand-odds"

@using PokerEvalApi.Models;

<EditForm Model="Model" OnValidSubmit="Submit" FormName="HandOddsForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>
            Pocket1:
            <InputText @bind-Value="Model!.Pocket1" />
        </label>
    </div>
    <div>
        <label>
            Pocket2:
            <InputText @bind-Value="Model!.Pocket2" />
        </label>
    </div>
    <div>
        <label>
            Board:
            <InputText @bind-Value="Model!.Board" />
        </label>
    </div>
    <div>
        <button type="submit" disabled="@IsCalculating">Calculate</button>
    </div>
</EditForm>

@if (IsCalculating)
{
    <p><em>Calculating...</em></p>
}
@if (Item != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>@nameof(PokerOddsResponseItem.Pocket)</th>
                <th>@nameof(PokerOddsResponseItem.WinRate)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Item.Pockets)
            {
                <tr>
                    <td>@item.Pocket</td>
                    <td>@item.WinRate.ToString("P2")</td>
                </tr>
            }
        </tbody>
    </table>
    @if (!string.IsNullOrEmpty(Item.Board)) {
        <div>
            <label>
                Board:
                @Item.Board
            </label>
        </div>
    }
}
